# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish Release

on:
  push:
    branches: [master]

jobs:
  deploy:
    if: "${{!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'Release: Version Updates')}}"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set Node Version
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Lint
        run: yarn lint

      - name: Unit Test
        run: yarn test

      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
      - run: git config --global user.email ${{ secrets.GH_EMAIL }}
      - run: git config --global user.name ${{ secrets.GH_USER }}
      - run: yarn release --no-verify # skip lifecycle checks for automated releases
      - run: git push --follow-tags origin ${GITHUB_REF##*/} && npm publish
